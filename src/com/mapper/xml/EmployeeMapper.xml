<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mapper.EmployeeMapper">

	<!-- 登录 -->
	<select id="login" resultType="com.entity.Employee">
		select * from employee where state = 1 and loginName = #{0} and loginPassword = #{1}   
	</select>

	<!-- DataTabables 分页，搜索  -->
	<select id="getPageEmployeeList" resultType="com.entity.Employee">
		select * from employee
		<where>
			<if test="subSQL != null and subSQL != '' ">
				${subSQL}
			</if>
			<if test="search != null and search != ''">
				and INSTR(ifnull(userName,''),'${search}') > 0
			</if>
		</where>
	</select>
	
	
	<!-- 更新自己的密码 -->
	<update id="updatePasswordById">
	 	update employee set loginPassword = #{0}  where id = #{1}
	</update> 
	
	<!-- 更改头像 -->
	<update id="updEmployeeById" parameterType="com.entity.Employee">
		update employee set url = #{url} where id = #{id}
	</update>
	
	<!-- 更改个人信息  -->
	<update id="updEmployeeByIdNoFile" parameterType="com.entity.Employee">
		update employee set userName = #{userName},loginName = #{loginName},email = #{email},telphone = #{telphone},remark = #{remark} where id = #{id}
	</update>
	
	<!-- 根据id查询用户 -->
	<select id="selById" resultType="com.entity.Employee">
		select * from employee where id = #{id}
	</select>
	
	<!-- 根据职位id查询用户 -->
	<select id="selByRoleId" resultType="com.entity.Employee">
		select * from employee where roleId = #{roleId}
	</select>
	
	<!-- 增加用户 -->
	<insert id="insEmployee">
		insert into employee (createDate,loginName,userName,loginPassword,idCard,telphone,email,address) values(#{createDate},#{loginName},#{userName},#{loginPassword},#{idCard},
		#{telphone},#{email},#{address})
	</insert>
	
	<!-- 删除用户   单条、多条  -->
	<delete id="delEmployees">
		delete from employee where id in
		<foreach collection="idlist" item="id" index="index" open="(" close=")"  separator=",">
			#{id}
		</foreach>
	</delete>
	
	<!-- 修改员工信息 -->
	<update id="updEmployee">
		update employee set userName = #{userName},idCard = #{idCard},telphone = #{telphone},
		email = #{email},address = #{address} where id = #{id}
	</update>

	<!-- 添加查询所有用户名，注册时判断是否重复 -->
	<select id="selectAllName" resultType="com.entity.Employee">
		select loginName,email from employee where loginName = #{loginName}
	</select>
	
	<!-- 更新查询所有用户名，注册时判断是否重复 -->
	<select id="selectAllNameUpdate" resultType="com.entity.Employee">
		select loginName from employee where loginName = #{0} and id != #{1}
	</select>
	
	<!-- 修改员工状态 -->
	<update id="updateEmployeeState" parameterType="com.entity.Employee">
		update employee set state = #{0} where id = #{1}
	</update>
	
</mapper>